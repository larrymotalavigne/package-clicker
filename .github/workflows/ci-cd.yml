name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Private Registry
        uses: docker/login-action@v3
        with:
          registry: registry.atomdev.fr
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            registry.atomdev.fr/packageclicker:${{ github.sha }}
            registry.atomdev.fr/packageclicker:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copy docker-compose files to UNRAID
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.UNRAID_SSH_HOST }}
          port: 2345
          username: ${{ secrets.UNRAID_SSH_USER }}
          key: ${{ secrets.UNRAID_SSH_KEY }}
          source: "docker-compose.yml"
          target: "/srv/packageclicker/"

      - name: Deploy with Docker Compose via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.UNRAID_SSH_HOST }}
          port: 2345
          username: ${{ secrets.UNRAID_SSH_USER }}
          key: ${{ secrets.UNRAID_SSH_KEY }}
          script: |
            cd /srv/packageclicker/
            docker login registry.atomdev.fr -u ${{ secrets.REGISTRY_USERNAME }} -p ${{ secrets.REGISTRY_PASSWORD }}
            docker compose pull
            docker compose up -d --remove-orphans
            
            # Clean up unused images to prevent orphan images
            echo "Cleaning up unused Docker images..."
            docker image prune -f
            echo "âœ… Cleaned up unused Docker images"